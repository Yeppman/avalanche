{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Avalanche\\\\Sports-Avalanche-frontend\\\\pages\\\\components\\\\navbar-two.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Toolbar from './Navbar/components/Toolbar/Toolbar';\nimport SideDrawer from './Navbar/components/SideDrawer/SideDrawer'; // import Backdrop from './Navbar/components/backdrop/Backdrop';\n\nimport Backdrop from './Navbar/components/Backdrop/Backdrop';\n\nvar NavbarTwo = /*#__PURE__*/function (_Component) {\n  _inherits(NavbarTwo, _Component);\n\n  var _super = _createSuper(NavbarTwo);\n\n  function NavbarTwo() {\n    var _this;\n\n    _classCallCheck(this, NavbarTwo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      sideDrawerOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drawerToggleClickHandler\", function () {\n      _this.setState(function (prevState) {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"backdropClickHandler\", function () {\n      _this.setState({\n        sideDrawerOpen: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(NavbarTwo, [{\n    key: \"render\",\n    value: function render() {\n      var backdrop;\n\n      if (this.state.sideDrawerOpen) {\n        backdrop = __jsx(Backdrop, {\n          click: this.backdropClickHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 18\n          }\n        });\n      }\n\n      return __jsx(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, __jsx(Toolbar, {\n        drawerClickHandler: this.drawerToggleClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), __jsx(SideDrawer, {\n        show: this.state.sideDrawerOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), backdrop);\n    }\n  }]);\n\n  return NavbarTwo;\n}(Component);\n\nexport default NavbarTwo;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Avalanche/Sports-Avalanche-frontend/pages/components/navbar-two.js"],"names":["React","Component","Toolbar","SideDrawer","Backdrop","NavbarTwo","sideDrawerOpen","setState","prevState","backdrop","state","backdropClickHandler","height","drawerToggleClickHandler"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,UAAP,MAAuB,2CAAvB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,uCAArB;;IAEMC,S;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,cAAc,EAAE;AADV,K;;+EAImB,YAAM;AAC/B,YAAKC,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3B,eAAO;AAACF,UAAAA,cAAc,EAAE,CAACE,SAAS,CAACF;AAA5B,SAAP;AACD,OAFD;AAGD,K;;2EAEsB,YAAM;AAC3B,YAAKC,QAAL,CAAc;AAACD,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,K;;;;;;;6BAEQ;AACP,UAAIG,QAAJ;;AAEA,UAAI,KAAKC,KAAL,CAAWJ,cAAf,EAA+B;AAC7BG,QAAAA,QAAQ,GAAG,MAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAKE,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACD;;AACD,aACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,kBAAkB,EAAE,KAAKC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWJ,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGGG,QAHH,CADF;AAOD;;;;EA5BqBR,S;;AA+BxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Toolbar from './Navbar/components/Toolbar/Toolbar';\r\nimport SideDrawer from './Navbar/components/SideDrawer/SideDrawer';\r\n// import Backdrop from './Navbar/components/backdrop/Backdrop';\r\n\r\nimport Backdrop from './Navbar/components/Backdrop/Backdrop'\r\n\r\nclass NavbarTwo extends Component {\r\n  state = {\r\n    sideDrawerOpen: false\r\n  };\r\n\r\n  drawerToggleClickHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\r\n    });\r\n  };\r\n\r\n  backdropClickHandler = () => {\r\n    this.setState({sideDrawerOpen: false});\r\n  };\r\n\r\n  render() {\r\n    let backdrop;\r\n\r\n    if (this.state.sideDrawerOpen) {\r\n      backdrop = <Backdrop click={this.backdropClickHandler} />\r\n    }\r\n    return (\r\n      <div style={{height: '100%'}}>\r\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\r\n        <SideDrawer show={this.state.sideDrawerOpen} />\r\n        {backdrop}    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarTwo;\r\n"]},"metadata":{},"sourceType":"module"}